<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:int="http://www.springframework.org/schema/integration" xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp" xmlns:int-event="http://www.springframework.org/schema/integration/event" xmlns:int-file="http://www.springframework.org/schema/integration/file" xmlns:int-groovy="http://www.springframework.org/schema/integration/groovy" xmlns:int-http="http://www.springframework.org/schema/integration/http" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc" xmlns:int-mail="http://www.springframework.org/schema/integration/mail" xmlns:int-script="http://www.springframework.org/schema/integration/scripting" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:rabbit="http://www.springframework.org/schema/rabbit" xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-5.1.xsd http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-5.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-5.1.xsd http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-5.1.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-5.0.xsd http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-5.1.xsd http://www.springframework.org/schema/integration/groovy http://www.springframework.org/schema/integration/groovy/spring-integration-groovy-5.1.xsd http://www.springframework.org/schema/integration/scripting http://www.springframework.org/schema/integration/scripting/spring-integration-scripting-5.1.xsd http://www.springframework.org/schema/integration/event http://www.springframework.org/schema/integration/event/spring-integration-event-5.1.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-5.1.xsd ">
  <int:logging-channel-adapter id="loggingChannel" level="INFO" />
  <bean id="errorUnwrapper" class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ErrorUnwrapper" />
  <int:channel id="recoveryChannel" />
  <int:transformer input-channel="recoveryChannel" output-channel="loggingChannel" expression="'Failure after many attemps for the message :' + payload.failedMessage.payload" />
  <int:poller fixed-delay="1000" default="true" />
  <int-file:inbound-channel-adapter id="file-bankCustomer-InputChannel-id" directory="data/input" channel="bankCustomer-InputChannel" prevent-duplicates="true" filename-pattern="bankOrder.json" />
  <int-file:file-to-string-transformer input-channel="bankCustomer-InputChannel" output-channel="bankCustomer-InputChannelTransformer" delete-files="false" />
  <int:chain input-channel="bankCustomer-InputChannelTransformer" output-channel="bankCustomer-OutputChannel">
    <int:json-to-object-transformer type="service.orchaPartitioning.Order" />
    <int:header-enricher>
      <int:header name="messageID" expression="headers['id'].toString()" />
    </int:header-enricher>
  </int:chain>
  <int:recipient-list-router id="router-bankCustomer-OutputChannel-id" input-channel="bankCustomer-OutputChannel">
    <int:recipient channel="bankCustomer-OutputChannelRoute1" selector-expression="((payload.bank == 'BANK1') or (payload.bank == 'BANK3'))" />
    <int:recipient channel="bankCustomer-OutputChannelRoute2" selector-expression="payload.bank == 'BANK2'" />
    <int:recipient channel="loggingChannel" />
  </int:recipient-list-router>
  <int:channel id="bankCustomer-OutputChannelRoute1" />
  <int:gateway id="gateway-bankCustomer-OutputChannelRoute1Orcha-id" service-interface="orcha.lang.generated.bankserviceGateway" default-request-channel="bankCustomer-OutputChannelRoute1Orcha" />
  <int:chain input-channel="bankCustomer-OutputChannelRoute1Orcha" output-channel="processOrderBank1ServiceAcivatorOutput">
    <int:header-enricher>
      <int:header name="messageID" expression="headers['id'].toString()" />
    </int:header-enricher>
  </int:chain>
  <int:transformer id="transformer-processOrderBank1ServiceAcivatorOutput-id" input-channel="processOrderBank1ServiceAcivatorOutput" output-channel="processOrderBank1AggregatorInput" method="transform">
    <bean class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ObjectToApplicationTransformer">
      <property name="application" ref="processOrderBank1" />
    </bean>
  </int:transformer>
  <int:aggregator id="aggregator-processOrderBank1AggregatorInput-id" input-channel="processOrderBank1AggregatorInput" output-channel="processOrderBank1AggregatorInputTransformer" release-strategy-expression="size()==1 and ( (messages[0].payload instanceof T(orcha.lang.configuration.Application) and messages[0].payload.state==T(orcha.lang.configuration.State).TERMINATED) )" correlation-strategy-expression="headers['messageID']" />
  <int:transformer id="transformer-processOrderBank1AggregatorInput-id" input-channel="processOrderBank1AggregatorInputTransformer" output-channel="processOrderBank1AggregatorInputAggregatorOutput" expression="payload.?[name=='processOrderBank1']" />
  <int:transformer id="transformer-processOrderBank1AggregatorInputAggregatorOutput-id" input-channel="processOrderBank1AggregatorInputAggregatorOutput" output-channel="processOrderBank1AggregatorOutputTransformer" method="transform">
    <bean class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ApplicationToObjectTransformer" />
  </int:transformer>
  <int:chain input-channel="processOrderBank1AggregatorOutputTransformer" output-channel="processOrderBank1OutputFileChannelAdapterbankCustomer1">
    <int:object-to-json-transformer />
  </int:chain>
  <int:channel id="processOrderBank1OutputFileChannelAdapterbankCustomer1" />
  <int-file:outbound-channel-adapter id="file-processOrderBank1bankCustomer1Channel-id" channel="processOrderBank1OutputFileChannelAdapterbankCustomer1" directory-expression="@bankCustomer1.output.adapter.directory" filename-generator-expression="@bankCustomer1.output.adapter.filename" append-new-line="true" mode="REPLACE" auto-create-directory="true" delete-source-files="false" />
  <int:chain input-channel="bankCustomer-OutputChannelRoute2" output-channel="processOrderBank2ServiceAcivatorOutput" id="service-activator-chain-processOrderBank2Channel-id">
    <int:service-activator id="service-activator-processOrderBank2Channel-id" expression="@orchaBankingService2.process(payload)">
      <int:request-handler-advice-chain />
    </int:service-activator>
  </int:chain>
  <int:transformer id="transformer-processOrderBank2ServiceAcivatorOutput-id" input-channel="processOrderBank2ServiceAcivatorOutput" output-channel="processOrderBank2AggregatorInput" method="transform">
    <bean class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ObjectToApplicationTransformer">
      <property name="application" ref="processOrderBank2" />
    </bean>
  </int:transformer>
  <int:aggregator id="aggregator-processOrderBank2AggregatorInput-id" input-channel="processOrderBank2AggregatorInput" output-channel="processOrderBank2AggregatorInputTransformer" release-strategy-expression="size()==1 and ( (messages[0].payload instanceof T(orcha.lang.configuration.Application) and messages[0].payload.state==T(orcha.lang.configuration.State).TERMINATED) )" correlation-strategy-expression="headers['messageID']" />
  <int:transformer id="transformer-processOrderBank2AggregatorInput-id" input-channel="processOrderBank2AggregatorInputTransformer" output-channel="processOrderBank2AggregatorInputAggregatorOutput" expression="payload.?[name=='processOrderBank2']" />
  <int:transformer id="transformer-processOrderBank2AggregatorInputAggregatorOutput-id" input-channel="processOrderBank2AggregatorInputAggregatorOutput" output-channel="processOrderBank2AggregatorOutputTransformer" method="transform">
    <bean class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ApplicationToObjectTransformer" />
  </int:transformer>
  <int:chain input-channel="processOrderBank2AggregatorOutputTransformer" output-channel="processOrderBank2OutputFileChannelAdapterbankCustomer1">
    <int:object-to-json-transformer />
  </int:chain>
  <int:channel id="processOrderBank2OutputFileChannelAdapterbankCustomer1" />
  <int-file:outbound-channel-adapter id="file-processOrderBank2bankCustomer1Channel-id" channel="processOrderBank2OutputFileChannelAdapterbankCustomer1" directory-expression="@bankCustomer1.output.adapter.directory" filename-generator-expression="@bankCustomer1.output.adapter.filename" append-new-line="true" mode="REPLACE" auto-create-directory="true" delete-source-files="false" />
  <int:gateway id="gateway-bankCustomer-OutputChannelRoute3Orcha-id" service-interface="orcha.lang.generated.bankserviceGateway" default-request-channel="bankCustomer-OutputChannelRoute3Orcha" />
  <int:chain input-channel="bankCustomer-OutputChannelRoute3Orcha" output-channel="processOrderBank3ServiceAcivatorOutput">
    <int:header-enricher>
      <int:header name="messageID" expression="headers['id'].toString()" />
    </int:header-enricher>
  </int:chain>
  <int:transformer id="transformer-processOrderBank3ServiceAcivatorOutput-id" input-channel="processOrderBank3ServiceAcivatorOutput" output-channel="processOrderBank3AggregatorInput" method="transform">
    <bean class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ObjectToApplicationTransformer">
      <property name="application" ref="processOrderBank3" />
    </bean>
  </int:transformer>
  <int:aggregator id="aggregator-processOrderBank3AggregatorInput-id" input-channel="processOrderBank3AggregatorInput" output-channel="processOrderBank3AggregatorInputTransformer" release-strategy-expression="size()==1 and ( (messages[0].payload instanceof T(orcha.lang.configuration.Application) and messages[0].payload.state==T(orcha.lang.configuration.State).TERMINATED) )" correlation-strategy-expression="headers['messageID']" />
  <int:transformer id="transformer-processOrderBank3AggregatorInput-id" input-channel="processOrderBank3AggregatorInputTransformer" output-channel="processOrderBank3AggregatorInputAggregatorOutput" expression="payload.?[name=='processOrderBank3']" />
  <int:transformer id="transformer-processOrderBank3AggregatorInputAggregatorOutput-id" input-channel="processOrderBank3AggregatorInputAggregatorOutput" output-channel="processOrderBank3AggregatorOutputTransformer" method="transform">
    <bean class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ApplicationToObjectTransformer" />
  </int:transformer>
  <int:chain input-channel="processOrderBank3AggregatorOutputTransformer" output-channel="processOrderBank3OutputFileChannelAdapterbankCustomer1">
    <int:object-to-json-transformer />
  </int:chain>
  <int:channel id="processOrderBank3OutputFileChannelAdapterbankCustomer1" />
  <int-file:outbound-channel-adapter id="file-processOrderBank3bankCustomer1Channel-id" channel="processOrderBank3OutputFileChannelAdapterbankCustomer1" directory-expression="@bankCustomer1.output.adapter.directory" filename-generator-expression="@bankCustomer1.output.adapter.filename" append-new-line="true" mode="REPLACE" auto-create-directory="true" delete-source-files="false" />
</beans>
